imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        name: "promote_api"
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Doctrine Configuration
doctrine:
    dbal:
        driver:         pdo_pgsql
        host:           "%database_host%"
        port:           "%database_port%"
        dbname:         "%database_name%"
        user:           "%database_user%"
        password:       "%database_password%"
        charset:        UTF8
        server_version: 5.6

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        view_response_listener: 'force'
        formats:
            json : true
        failed_validation: HTTP_BAD_REQUEST
    routing_loader:
        default_format: json
        include_format: false

nelmio_api_doc: ~

oneup_flysystem:
    adapters:
        app.flysystem_adapter:
            awss3v3:
                client: app.s3_client
                bucket: "%awss3_bucket%"
                prefix: ~
                options:
                    ACL: public-read

    filesystems:
        awss3_fs:
            adapter: app.flysystem_adapter
            mount: awss3_fs

vich_uploader:
    db_driver: orm
    storage: flysystem
    mappings:
        artist_image:
            uri_prefix: http://amazon.com/
            upload_destination: awss3_fs
            namer: vich_uploader.namer_uniqid
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true